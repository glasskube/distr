# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build Agents

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:

jobs:
  build-agent:
    if: ${{ matrix.platform.enabled }}
    timeout-minutes: 30
    runs-on: ${{ matrix.platform.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        agent:
          - docker-agent
          - kubernetes-agent
        platform:
          - arch: linux/amd64
            runner: ubuntu-latest
            enabled: true
          - arch: linux/arm64
            runner: ubuntu-24.04-arm
            enabled: ${{ startsWith(github.ref, 'refs/tags/') }}
    env:
      REGISTRY_IMAGE: ghcr.io/glasskube/distr/${{ matrix.agent }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Generate commit hash
        id: generate
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Docker build (push only for tag)
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          platforms: ${{ matrix.platform.arch }}
          file: Dockerfile.${{ matrix.agent }}
          build-args: |
            COMMIT=${{ steps.generate.outputs.sha_short }}
            VERSION=${{ github.ref_name }}
          tags: ${{ env.REGISTRY_IMAGE }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=${{ startsWith(github.ref, 'refs/tags/') }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Prepare for export
        run: |
          platform=${{ matrix.platform.arch }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.agent }}-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - build-agent
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        agent:
          - docker-agent
          - kubernetes-agent
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ matrix.agent }}-*
          merge-multiple: true
      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,event=branch
            type=semver,pattern={{version}}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.description=Distr agent software
            org.opencontainers.image.vendor=Glasskube
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
