# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build Hub

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: Build
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache-dependency-path: |
            go.sum
      - name: Setup node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: '22'
          cache: npm
          registry-url: 'https://registry.npmjs.org'
      - name: Generate commit hash
        id: hash
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Install frontend dependencies with npm
        run: npm ci

      - name: Lint with prettier
        run: npm run lint
      - name: Lint with golangci-lint
        uses: golangci/golangci-lint-action@818ec4d51a1feacefc42ff1b3ec25d4962690f39 # v6.4.1
        with:
          version: latest

      - name: Build frontend
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: npm run build:prod
      - name: Build frontend and upload source maps (tag only)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          npm run build:prod -- --source-map=true || exit 1
          npm run sentry-upload || exit 1
          rm internal/frontend/dist/ui/browser/*.map || exit 1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VERSION: ${{ github.ref_name }}

      - name: Build application
        run: go build -ldflags="$LDFLAGS" -o dist/distr ./cmd/hub/
        env:
          CGO_ENABLED: '0'
          LDFLAGS: >-
            -X github.com/glasskube/distr/internal/buildconfig.version=${{ github.ref_name }}
            -X github.com/glasskube/distr/internal/buildconfig.commit=${{ steps.hash.outputs.sha_short }}

      - name: Login to GitHub Container Registry (tag only)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0
      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ghcr.io/glasskube/distr
          tags: |
            type=ref,event=branch
            type=sha,event=branch
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.description=Distr Hub
            org.opencontainers.image.vendor=Glasskube
      - name: Docker build (push on tag only)
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          platforms: ${{ startsWith(github.ref, 'refs/tags/') && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          context: .
          file: Dockerfile.hub
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
