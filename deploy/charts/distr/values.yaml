# Default values for distr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/glasskube/distr
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ''
fullnameOverride: ''

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

hub:
  env:
    - name: DISTR_HOST
      value: http://distr.local
    - name: REGISTRY_ENABLED
      value: 'true'
    # REGISTRY_* variables are only relevant if REGISTRY_ENABLED is true
    - name: REGISTRY_HOST
      value: pkg.distr.local
    - name: REGISTRY_S3_BUCKET
      value: distr
    - name: REGISTRY_S3_REGION
      value: local
    - name: REGISTRY_S3_ENDPOINT
      value: http://distr-registry-minio:9000
    - name: REGISTRY_S3_ACCESS_KEY_ID
      value: distr
    - name: REGISTRY_S3_SECRET_ACCESS_KEY
      value: distr123
    - name: REGISTRY_S3_USE_PATH_STYLE
      value: 'true'
    - name: REGISTRY_S3_ALLOW_REDIRECT
      value: 'false'
    # Set of variables required to use GCP as a S3 compatible backend
    # - name: REGISTRY_S3_REQUEST_CHECKSUM_CALCULATION
    #   value: 'true'
    # - name: REGISTRY_S3_RESPONSE_CHECKSUM_VALIDATION
    #   value: 'true'
    # - name: REGISTRY_RESIGN_FOR_GCP
    #   value: 'true'
    # The base64 encoded JWT secret
    # Can be generated with `openssl rand -base64 32`
    - name: JWT_SECRET
      value: WQrGMYx4tZdGwKlt0RTrhMzfQ+j1wr6z7oRWfmGlETk=
      # We recommend reading the JWT secret from a secretKeyRef
      # valueFrom:
      #   secretKeyRef:
      #     name: ""
      #     key: ""
    - name: MAILER_FROM_ADDRESS
      value: My Distr <noreply@distr.local>
    - name: MAILER_TYPE
      # change to "ses" for direct usage of the AWS SDK for SES
      value: smtp
    - name: MAILER_SMTP_HOST
      value: smtp.example.local
    - name: MAILER_SMTP_PORT
      value: '25'
    # - name: MAILER_SMTP_USERNAME
    #   value: ""
    # - name: MAILER_SMTP_PASSWORD
    #  valueFrom:
    #    secretKeyRef:
    #      name: ""
    #      key: ""
    # - name: REGISTRATION # User Registration Mode â€“ can be one of "enabled" (default), "hidden", "disabled"
    #   value: enabled
    - name: USER_EMAIL_VERIFICATION_REQUIRED
      value: 'false'
    - name: METRICS_ENTRIES_MAX_AGE
      value: '1h'
    - name: LOG_RECORD_ENTRIES_MAX_COUNT
      value: '500'
    # - name: OIDC_GITHUB_ENABLED
    #   value: 'true'
    # - name: OIDC_GITHUB_CLIENT_ID # required if OIDC_GITHUB_ENABLED
    #   value:
    # - name: OIDC_GITHUB_CLIENT_SECRET # required if OIDC_GITHUB_ENABLED
    #   value:
    # - name: OIDC_GOOGLE_ENABLED
    #   value: 'true'
    # - name: OIDC_GOOGLE_CLIENT_ID # required if OIDC_GOOGLE_ENABLED
    #   value:
    # - name: OIDC_GOOGLE_CLIENT_SECRET # required if OIDC_GOOGLE_ENABLED
    #   value:
    # - name: OIDC_MICROSOFT_ENABLED
    #   value: 'true'
    # - name: OIDC_MICROSOFT_CLIENT_ID # required if OIDC_MICROSOFT_ENABLED
    #   value:
    # - name: OIDC_MICROSOFT_CLIENT_SECRET # required if OIDC_MICROSOFT_ENABLED
    #   value:
    # - name: OIDC_MICROSOFT_TENANT_ID # required if OIDC_MICROSOFT_ENABLED
    #   value:
  envFrom: []

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080
  artifactsPort: 8585

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ''
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: distr.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          port:
            name: http
    - host: pkg.distr.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          port:
            name: artifacts
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 2Gi
  # requests:
  #   cpu: 100m
  #   memory: 256Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 100
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

cronJobs:
  - name: deployment-log-record-cleanup
    labels:
      distr.sh/job: deployment-log-record-cleanup
    args: [cleanup, DeploymentLogRecord, --timeout, 10m]
  - name: deployment-revision-status-cleanup
    labels:
      distr.sh/job: deployment-revision-status-cleanup
    args: [cleanup, DeploymentRevisionStatus, --timeout, 10m]
  - name: deployment-target-metrics-cleanup
    labels:
      distr.sh/job: deployment-target-metrics-cleanup
    args: [cleanup, DeploymentTargetMetrics, --timeout, 10m]
  - name: deployment-target-status-cleanup
    labels:
      distr.sh/job: deployment-target-status-cleanup
    args: [cleanup, DeploymentTargetStatus, --timeout, 10m]
  - name: oidcstate-cleanup
    labels:
      distr.sh/job: oidcstate-cleanup
    args: [cleanup, OIDCState, --timeout, 10m]

postgresql:
  enabled: false
  auth:
    username: distr
    password: ''
    database: distr
    existingSecret: ''
  architecture: standalone
  service:
    ports:
      postgresql: 5432

minio:
  enabled: false
  fullnameOverride: distr-registry-minio
  rootUser: distr
  rootPassword: 'distr123' # please change this
  deploymentUpdate:
    type: Recreate
  mode: standalone
  persistence:
    size: 20Gi
  replicas: 1
  buckets:
    - name: distr
      purge: false

externalDatabase:
  uri: ''
  existingSecret: ''
  existingSecretUriKey: 'uri'
