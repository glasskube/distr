# Database
POSTGRES_USER="distr"
POSTGRES_PASSWORD="distr" # CHANGE THIS!
POSTGRES_DB="distr"
DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
# DATABASE_MAX_CONNS=10

# General
DISTR_HOST="https://localhost:8080"

# OCI Registry Settings
REGISTRY_ENABLED=true          # default false; if true, REGISTRY_S3_BUCKET and REGISTRY_S3_REGION are mandatory
REGISTRY_HOST="localhost:8585" # only relevant if REGISTRY_ENABLED is true, defaults to the value of DISTR_HOST
REGISTRY_S3_BUCKET="distr"
REGISTRY_S3_REGION="local"
REGISTRY_S3_ENDPOINT="http://localhost:9000"
REGISTRY_S3_ACCESS_KEY_ID="distr"
REGISTRY_S3_SECRET_ACCESS_KEY="distr123"
REGISTRY_S3_USE_PATH_STYLE=true
REGISTRY_S3_ALLOW_REDIRECT=true

# minio Settings â€“ relevant for the OCI registry feature, and only if you want to host S3 yourself:
MINIO_ROOT_USER="distr"
MINIO_ROOT_PASSWORD="distr123" # CHANGE THIS!

STATUS_ENTRIES_MAX_AGE=1h
METRICS_ENTRIES_MAX_AGE=1h
# ENABLE_QUERY_LOGGING=true

# Security
JWT_SECRET="aW5zZWN1cmUK" # CHANGE THIS! Generate with "openssl rand -base64 32"
USER_EMAIL_VERIFICATION_REQUIRED=false
# INVITE_TOKEN_VALID_DURATION=72h
# AGENT_TOKEN_MAX_VALID_DURATION=10s

# User Registration Mode:
# REGISTRATION=enabled # can be one of "enabled" (default), "hidden", "disabled"

# OIDC parameters
# OIDC_GITHUB_ENABLED=true
# OIDC_GITHUB_CLIENT_ID="" # required if OIDC_GITHUB_ENABLED
# OIDC_GITHUB_CLIENT_SECRET="" # required if OIDC_GITHUB_ENABLED
# OIDC_GOOGLE_ENABLED=true
# OIDC_GOOGLE_CLIENT_ID="" # required if OIDC_GOOGLE_ENABLED
# OIDC_GOOGLE_CLIENT_SECRET="" # required if OIDC_GOOGLE_ENABLED
# OIDC_MICROSOFT_ENABLED=true
# OIDC_MICROSOFT_CLIENT_ID="" # required if OIDC_MICROSOFT_ENABLED
# OIDC_MICROSOFT_CLIENT_SECRET="" # required if OIDC_MICROSOFT_ENABLED
# OIDC_MICROSOFT_TENANT_ID="" # required if OIDC_MICROSOFT_ENABLED
OIDC_GENERIC_ENABLED=true
OIDC_GENERIC_ISSUER="http://dex:5556/dex"
OIDC_GENERIC_CLIENT_ID="example-app"
OIDC_GENERIC_CLIENT_SECRET="example-app-secret"
OIDC_GENERIC_SCOPES="openid,user,email,groups"

# Mail sending
MAILER_TYPE="smtp" # can be one of: "smtp", "ses"
MAILER_FROM_ADDRESS="noreply@distr.example.com"
MAILER_SMTP_HOST="mailhog"
MAILER_SMTP_PORT=1025
# MAILER_SMTP_USERNAME="..."
# MAILER_SMTP_PASSWORD="..."

# Agent
# AGENT_INTERVAL=5m
# AGENT_DOCKER_CONFIG='{"auths":{"https://index.docker.io/v1/":{"username":"...","password":"..."}}}'

# Observability config
# Reference: https://opentelemetry.io/docs/languages/sdk-configuration/
# OTEL_SERVICE_NAME="Distr"
# OTEL_TRACES_SAMPLER="parentbased_traceidratio"
# OTEL_TRACES_SAMPLER_ARG=0.5
# OTEL_AGENT_SAMPLER=traceidratio
# OTEL_AGENT_SAMPLER_ARG=0.01
# OTEL_REGISTRY_SAMPLER=traceidratio
# OTEL_REGISTRY_SAMPLER_ARG=0.01
# OTEL_EXPORTER_SENTRY_ENABLED="true"
# OTEL_EXPORTER_OTLP_ENABLED="true"
# OTEL_EXPORTER_OTLP_ENDPOINT="..."
# SENTRY_DSN="..."
# SENTRY_DEBUG=true
# FRONTEND_SENTRY_DSN="..."
# FRONTEND_SENTRY_TRACE_SAMPLE_RATE=1.0

LOG_RECORD_ENTRIES_MAX_COUNT=500

# Scheduled job config
# cron interval in which revision statuses older than STATUS_ENTRIES_MAX_AGE will be deleted
CLEANUP_DEPLOYMENT_REVISION_STATUS_CRON="0 * * * *"
CLEANUP_DEPLOYMENT_REVISION_STATUS_TIMEOUT="10m"
# cron interval in which deployment target statuses older than STATUS_ENTRIES_MAX_AGE will be deleted
CLEANUP_DEPLOYMENT_TARGET_STATUS_CRON="0 * * * *"
CLEANUP_DEPLOYMENT_TARGET_STATUS_TIMEOUT="10m"
# cron interval in which metrics older than METRICS_ENTRIES_MAX_AGE will be deleted
CLEANUP_DEPLOYMENT_TARGET_METRICS_CRON="0 * * * *"
CLEANUP_DEPLOYMENT_TARGET_METRICS_TIMEOUT="10m"
# cron interval in which log entries older than the last LOG_RECORD_ENTRIES_MAX_COUNT will be deleted
CLEANUP_DEPLOYMENT_LOG_RECORD_CRON="0 * * * *"
CLEANUP_DEPLOYMENT_LOG_RECORD_TIMEOUT="10m"
# cron interval in which outdated, unused oidc state records will be deleted
CLEANUP_OIDC_STATE_CRON="0 * * * *"
CLEANUP_OIDC_STATE_CRON_TIMEOUT="10m"
